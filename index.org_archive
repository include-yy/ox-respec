#    -*- mode: org -*-


Archived entries from file d:/Onedrive/ox-w3ctr/index.org


* 对其余各元素的介绍
:PROPERTIES:
:ARCHIVE_TIME: 2024-04-20 Sat 12:51
:ARCHIVE_FILE: d:/Onedrive/ox-w3ctr/index.org
:ARCHIVE_CATEGORY: index
:END:

在这一节中我们会介绍所有二十九个元素，加上上面的 headline 和 section 一共三十个。

** greater blocks

=center-block= 就是让其中内容居中的 block，在语义上有居中含义，不过在 Org-mode buffer 中并不会居中显示。以下是一个 =center block= 例子（来自 [[https://orgmode.org/manual/Paragraphs.html][Paragraphs]]）：

#+attr_html: :class example
#+BEGIN_EXAMPLE
,#+BEGIN_CENTER
Everything should be made as simple as possible, \\
but not any simpler
,#+END_CENTER
#+END_EXAMPLE

其中 =\\= 表示段落内换行，它的效果如下：

#+begin_center
Everything should be made as simple as possible, \\
but not any simpler
#+END_center

类似地， =quote block= 具有语义上的引用义：

#+attr_html: :class example
#+BEGIN_EXAMPLE
,#+BEGIN_QUOTE
你说的对，但是《原神》是由米哈游自主研发的一款全新开放世界冒险游戏。游戏发生在一个被称作「提瓦特」的幻想世界，在这里，被神选中的人将被授予「神之眼」，导引元素之力。你将扮演一位名为「旅行者」的神秘角色，在自由的旅行中邂逅性格各异、能力独特的同伴们，和他们一起击败强敌，找回失散的亲人——同时，逐步发掘「原神」的真相。

你说得对，但是这就是奎桑提，HP 4700，护甲 329，魔抗 201的英雄。有不可阻挡，有护盾，还能过墙。有控制，甚至冷却时间只有1秒，只要15点蓝。转换姿态时甚至可以刷新W的cd，还有真实伤害。然后，护甲和魔抗提升后还能获得技能加速，缩短Q的cd，还缩短释放时间，然后还有攻击力。W就啊啊啊啊啊啊!!!
,#+END_QUOTE
#+END_EXAMPLE

#+begin_quote
你说的对，但是《原神》是由米哈游自主研发的一款全新开放世界冒险游戏。游戏发生在一个被称作「提瓦特」的幻想世界，在这里，被神选中的人将被授予「神之眼」，导引元素之力。你将扮演一位名为「旅行者」的神秘角色，在自由的旅行中邂逅性格各异、能力独特的同伴们，和他们一起击败强敌，找回失散的亲人——同时，逐步发掘「原神」的真相。

你说得对，但是这就是奎桑提，HP 4700，护甲 329，魔抗 201的英雄。有不可阻挡，有护盾，还能过墙。有控制，甚至冷却时间只有1秒，只要15点蓝。转换姿态时甚至可以刷新W的cd，还有真实伤害。然后，护甲和魔抗提升后还能获得技能加速，缩短Q的cd，还缩短释放时间，然后还有攻击力。W就啊啊啊啊啊啊!!!
#+end_quote

所谓 =special-block= 指的是它的 block 名为其他 org 未定义的名字，比如 =#+begin_aside= 。变量 =org-w3ctr-html5-elements= 记录了会被识别为 HTML 标签的名字，如果名字不属于其中的任意一个，那么名字将成为 =div= 标签的类。在 =ox-w3ctr= 中 =special-block= 的绝大部分作用都被 =dynamic-block= 替代了。

#+caption: org-w3ctr-html5-elements 的具体定义
#+begin_src elisp
(defconst t-html5-elements
  '("article" "aside" "audio" "canvas" "details" "figcaption" "div"
    "figure" "footer" "header" "menu" "meter" "nav" "noscript"
    "output" "progress" "section" "summary" "video")
  "Elements in html5.

For blocks that should contain headlines, use the HTML_CONTAINER
property on the headline itself.")
#+end_src

#+attr_html: :class example
#+begin_example
,#+begin_note
This is a note.
,#+end_note

,#+begin_example
This is an example.
,#+end_example

,#+begin_issue
This is an issue.
,#+end_issue

,#+begin_advisement
This is an advisement
,#+end_advisement

,#+begin_annoying-warning
This is an annoying-warning
,#+end_annoying-warning

,#+begin_correction
This is a correction
,#+end_correction

,#+begin_addition
This is an addition
,#+end_addition
#+end_example

#+begin_note
This is a note.
#+end_note

#+begin_example
This is an example.
#+end_example

#+begin_issue
This is an issue.
#+end_issue

#+begin_advisement
This is an advisement
#+end_advisement

#+begin_annoying-warning
This is an annoying-warning
#+end_annoying-warning

#+begin_correction
This is a correction
#+end_correction

#+begin_addition
This is an addition
#+end_addition



greater blocks 之所以 greater 自然是要与 lesser block 相对，它们允许包
含其他的 greater element。所有的（就 3 种）greater block 都具有如下结
构（其中的 =BEGIN= 也可为小写）：

#+BEGIN_EXAMPLE
,#+BEGIN_NAME PARAMETERS
CONTENTS
,#+END_NAME
#+END_EXAMPLE

其中， =NAME= 是不含空格的字符串，可以为任意不属于 lesser block 的名字；
=PARAMETERS= 是可选的参数，是不含换行的字符串； =CONTENTS= 为不含
=#+END_NAME= 行的任意内容。最后一条规则也就注定了它们不能自我嵌套（不
过可以相互嵌套）。这些 block 用的最多的地方也许是导出时根据不同后端生
成具有相同语义的产物。

在编写 Org 导出后端时，也许我们可以考虑利用这些 =block= （特别是
=special block= ）以及它们的 =PARAMETERS= 参数来实现更加丰富的语义。

*** center block

=center block= 在语义上有居中含义，不过在 Org-mode buffer 中并不会居中
显示。以下是一个 =center block= 例子（来自 [[https://orgmode.org/manual/Paragraphs.html][Paragraphs]]）：

#+BEGIN_EXAMPLE
,#+BEGIN_CENTER
Everything should be made as simple as possible, \\
but not any simpler
,#+END_CENTER
#+END_EXAMPLE

其中 =\\= 表示段落内换行。

*** quote block

类似地， =quote block= 也仅具有语义上的引用义：

#+BEGIN_EXAMPLE
,#+BEGIN_QUOTE
Everything should be made as simple as possible,
but not any simpler ---Albert Einstein
,#+END_QUOTE
#+END_EXAMPLE

*** special block

=special block= 相对特殊一些，它的 =NAME= 可以为任意非 =lesser block=
以及 =quote= 和 =center= 的名字，它的意义取决于导出后端想要赋予它什么
意义：

#+BEGIN_EXAMPLE
,#+BEGIN_div
hello world
,#+END_div
#+END_EXAMPLE

** drawers

drawer 具有如下结构：

#+attr_html: :class example
#+begin_example
:NAME:
CONTENTS
:end:
#+end_example

在 Org Manual 的 [[https://orgmode.org/manual/Drawers.html][Drawers]] 一节是这样描述它的：

#+BEGIN_QUOTE
Sometimes you want to keep information associated with an entry, but
you normally do not want to see it. For this, Org mode has
/drawers/. They can contain anything but a headline and another
/drawer/.
#+END_QUOTE

简单来说， =drawer= 提供了一种非 =headline= 的折叠展开内容方法。我们可以通过 =C-c C-x d(org-inser-drawer)= 插入 =drawer= 。当某个 region 被选中时，调用该命令会将当前 region 中的内容插入到 =drawer= 中；当带有前缀参时，该命令会调用 =org-insert-property-drawer= 来在当前 =headline= 插入 =PROPERTIES drawer= 。

如果使用 =#+caption:= 作为 =<details>= 中的 =<summary>= 的话， =drawer= 将会非常适合作为 =details= 的对应物，就像这样：

#+attr_html: :class example
#+begin_example
#+caption: This is a details
:everything-here-is-ok:
Contents are hidden
:end:
#+end_example

#+caption: This is a details
:everything-here-is-ok:
Contents are hidden

#+begin_src c
  #include <stdio.h>
  int main(void)
  {
	  print("hello world\n");
	  return 0;
  }
#+end_src
:end:

如果要生成默认显示的 =details= ，可以让 =NAME= 以 =open= 开头：

#+begin: example
#+begin_example
:open-this-details:
这是个默认打开的 details，由于没有 caption，故使用 NAME 作为 summary
:end:
#+end_example
#+end:

:open-this-details:
这是个默认打开的 details，由于没有 caption，故使用 NAME 作为 summary
:end:

*** property drawer
:PROPERTIES:
:CUSTOM_ID: property-drawer
:END:

=property drawer= 并不是上下文无关的。它必须紧接着 =headline= 或 =inlinetask= ，作用是为它们提供属性信息：

#+attr_html: :class example
#+BEGIN_EXAMPLE
HEADLINE
PROPERTYDRAWER

HEADLINE
PLANNING
PROPERTYDRAWER
#+END_EXAMPLE

相比一般 =drawer= ， =property drawer= 的要求更严格一些，它的 =NAME=
必须为 =PROPERTIES= ，而且 =CONTENTS= 中不能含空行，只能是 =node
property= 。以下是一个例子：

#+attr_html: :class example
#+BEGIN_EXAMPLE
,* Heading
:PROPERTIES:
:CUSTOM_ID: someid
:END:
#+END_EXAMPLE

本节的标题 =property drawer= 就具有一个 =CUSTOM_ID= 属性，读者可以查看本 HTML 页面的源代码找到它的 ID。



在 Org Manual 的 [[https://orgmode.org/manual/Drawers.html][Drawers]] 一节是这样描述它的：

#+BEGIN_QUOTE
Sometimes you want to keep information associated with an entry, but
you normally do not want to see it. For this, Org mode has
/drawers/. They can contain anything but a headline and another
/drawer/.
#+END_QUOTE

简单来说， =drawer= 提供了一种非 =headline= 的折叠展开内容方法。我们可
以通过 =C-c C-x d(org-inser-drawer)= 插入 =drawer= 。当某个 region 被
选中时，调用该命令会将当前 region 中的内容插入到 =drawer= 中；当带有前
缀参数时，该命令会调用 =org-insert-property-drawer= 来在当前
=headline= 插入 =PROPERTIES drawer= 。

*** drawer

=drawer= 具有如下结构：

#+BEGIN_EXAMPLE
:NAME:
CONTENTS
:end:
#+END_EXAMPLE

其中， =NAME= 是 =[[:word]_-]= 构成的字符串，也就是说不能含有空格。
=CONTENTS= 是除 =drawer= 外的其他元素。

如果 =NAME= 的要求再放宽一点， =drawer= 还挺适合拿来做 HTML 中的
=<details>= 和 =<summary>= 标签原料的。

*** property drawer

如前文所述， =drawer= 是为数不多的上下文无关元素，因此 =property
drawer= 并不是上下文无关的。它必须紧接着 =headline= 或 =inlinetask= ，
作用是为它们提供属性信息：

#+BEGIN_EXAMPLE
HEADLINE
PROPERTYDRAWER

HEADLINE
PLANNING
PROPERTYDRAWER
#+END_EXAMPLE

相比一般 =drawer= ， =property drawer= 的要求更严格一些，它的 =NAME=
必须为 =PROPERTIES= ，而且 =CONTENTS= 中不能含空行，只能是 =node
property= 。以下是一个例子：

#+BEGIN_EXAMPLE
,* Heading
:PROPERTIES:
:CUSTOM_ID: someid
:END:
#+END_EXAMPLE

** dynamic block


=dynamic block= 结构如下：

#+attr_html: :class example
#+BEGIN_EXAMPLE
,#+begin: NAME PARAMETERS
CONTENTS
,#+end:
#+END_EXAMPLE

其中 =NAME= 是不含空格的字符串； =PARAMETERS= 是可选的参数字符串，不含换行符； =CONTENTS= 是除 =dynamic block= 外的零个或多个其他元素。

在 =dynamic block= 的文档 [[https://orgmode.org/manual/Dynamic-Blocks.html][Dyanmci Block]] 中对参数结构有更精细的描述，它应为 =:parameter1 value1 :parameter2 value2 ...= 。根据文档的说法， =dynamic block= 可以根据用户函数对块中的内容进行自动更新。我们可以通过 =C-c C-x x(org-dynamic-block-insert-dblock)= 来在当前位置插入 =dynamic block= ，并通过 =C-c C-x u(org-dblock-update)= 来更新块的内容。

我们可以添加 =org-update-all-dblocks= 到某些 hook 中来在必要时触发所有 =dynamic block= 的更新。读者可以阅读文档以及 =org-dblock-write:clocktable= 来学习如何编写生成和更新 =dynamic block= 的函数。

在 =ox-w3ctr= 中，我将 dynamic block 的功能提供为：替换 special block。这是因为 special block 会影响块内部的块高亮，而 dynamic block 不会。以下代码可以生成类为 =example= 的 =div= ：

#+attr_html: :class example
#+begin_example
#+begin: example
这是个在 #+begin: example 中的内容。
#+end:
#+end_example

#+begin: example
这是个在 #+begin: example 中的内容。
#+end:

在 =#+begin:= 后面如果是 =org-w3ctr-dynamic-block-elements= 中的一个元素，那么会生成名为该元素的标签，这一点和 =special block= 很像。

最后， =dynamic block= 后面可以接多个参数，以下代码会生成类为 =note= 的 =aside= 标签：

#+attr_html: :class example
#+begin_example
#+begin: aside example
this is an aside.
#+end:
#+end_example

#+begin: aside example
this is an aside.
#+end:



=dynamic block= 结构如下：

#+BEGIN_EXAMPLE
,#+begin: NAME PARAMETERS
CONTENTS
,#+end:
#+END_EXAMPLE

其中 =NAME= 是不含空格的字符串； =PARAMETERS= 是可选的参数字符串，不含
换行符； =CONTENTS= 是除 =dynamic block= 外的零个或多个其他元素。

在 =dynamic block= 的文档 [[https://orgmode.org/manual/Dynamic-Blocks.html][Dyanmci Block]] 中对参数结构有更精细的描述，它
应为 =:parameter1 value1 :parameter2 value2 ...= 。根据文档的说法，
=dynamic block= 可以根据用户函数对块中的内容进行自动更新。我们可以通过
=C-c C-x x(org-dynamic-block-insert-dblock)= 来在当前位置插入 =dynamic
block= ，并通过 =C-c C-x u(org-dblock-update)= 来更新块的内容。

我们可以添加 =org-update-all-dblocks= 到某些 hook 中来在必要时触发所有
=dynamic block= 的更新。读者可以阅读文档以及
=org-dblock-write:clocktable= 来学习如何编写生成和更新 =dynamic block=
的函数。

在 Org buffer 中我几乎没有使用过这个功能，不过作为 greater block 它似
乎可以在导出中提供一些非常灵活的功能，比如给上面的 =drawer= 提供参数来
为生成 =<summary>= 提供更好的参数（当然我们也可以使用 =begin_details=
来实现）。

** footnote definition

=footnote definition= 和 =headline= 一样必须顶格，它的结构如下：


=footnote definition= 和 =headline= 一样必须顶格，它的结构如下：

#+attr_html: :class example
#+BEGIN_EXAMPLE
[fn:LABEL] CONTENTS
#+END_EXAMPLE

其中 =LABEL= 是数字或由 =[[:word:]-_]= 组成的字符串，用来标识对应的脚注， =CONTENTS= 为脚注的内容，它在下一个 =footnote definition= 之前结束，或者是下一个 =headline= 、两个连续的换行、或 buffer 的末尾。这是一些例子，注意在第二个脚注中，隔了一行的字符串仍属于该脚注：

#+attr_html: :class example
#+BEGIN_EXAMPLE
[fn:1] A short footnote.

[fn:2] This is a longer footnote.

It even contains a single blank line.
#+END_EXAMPLE

Org-mode 支持三种形式的脚注，具体的用法可以参考 [[https://orgmode.org/manual/Creating-Footnotes.html][Creating Footnotes]]。

下面是一段来自维基百科的内容，我改成了 org-mode 格式：

#+attr_html: :class example
#+begin_example
Wikipe-tan (Japanese[fn:1]: ウィキペたん) is a personification of Wikipedia[fn:2] created in January 2006 by Japanese editor Kasuga[fn:3] She is an unofficial mascot of Wikipedia and is used at several WikiProjects. The -tan in "Wikipe-tan" is an affectionate suffix, in the form of a Japanese honorific. Like the OS-tans, she is a product of moe anthropomorphism.

[fn:1] Janapanese 的 wiki 链接：https://en.wikipedia.org/wiki/Japanese_language
[fn:2] Wikipedia 的链接：https://en.wikipedia.org/wiki/Wikipedia
[fn:3] In the aftermath of the unified login finalization, the user now going by Kasuga on Commons and on English Wikipedia is a different person. The accounts of the creator of Wikipe-tan were renamed Kasuga~enwiki, Kasuga~jawiki and Kasuga~commonswiki.
#+end_example

Wikipe-tan (Japanese[fn:1]: ウィキペたん) is a personification of Wikipedia[fn:2] created in January 2006 by Japanese editor Kasuga[fn:3] She is an unofficial mascot of Wikipedia and is used at several WikiProjects. The -tan in "Wikipe-tan" is an affectionate suffix, in the form of a Japanese honorific. Like the OS-tans, she is a product of moe anthropomorphism.

[fn:1] Janapanese 的 wiki 链接：https://en.wikipedia.org/wiki/Japanese_language
[fn:2] Wikipedia 的链接：https://en.wikipedia.org/wiki/Wikipedia
[fn:3] In the aftermath of the unified login finalization, the user now going by Kasuga on Commons and on English Wikipedia is a different person. The accounts of the creator of Wikipe-tan were renamed Kasuga~enwiki, Kasuga~jawiki and Kasuga~commonswiki.



#+BEGIN_EXAMPLE
[fn:LABEL] CONTENTS
#+END_EXAMPLE

其中 =LABEL= 是数字或由 =[[:word:]-_]= 组成的字符串，用来标识对应的脚
注， =CONTENTS= 为脚注的内容，它在下一个 =footnote definition= 之前结
束，或者是下一个 =headline= 、两个连续的换行、或 buffer 的末尾。这是一
些例子，注意在第二个脚注中，隔了一行的字符串仍属于该脚注：

#+BEGIN_EXAMPLE
[fn:1] A short footnote.

[fn:2] This is a longer footnote.

It even contains a single blank line.
#+END_EXAMPLE

Org-mode 支持三种形式的脚注，具体的用法可以参考 [[https://orgmode.org/manual/Creating-Footnotes.html][Creating Footnotes]]。

** inlinetask

当 =headline= 的星号数量大于等于 =org-inlinetask-min-level= 时，它就成了 =inlinetask= ，不过仅在 =org-inlinetask= 加载后才会有 =inlinetask= 。这个功能我从来没用使用过。下面是一个例子：

#+attr_html: :class example
#+BEGIN_EXAMPLE
,*************** TODO some tiny task
This is a paragraph, it lies outside the inlinetask above.
,*************** TODO some small task
                 DEADLINE: <2009-03-30 Mon>
                 :PROPERTIES:
                   :SOMETHING: or other
                 :END:
                 And here is some extra text
,*************** END
#+END_EXAMPLE

我在 Org Manual 中居然没有找到 =inlinetask= 的章节。

在 =ox-w3ctr= 中， =inlinetask= 不导出。



当 =headline= 的星号数量大于等于 =org-inlinetask-min-level= 时，它就成
了 =inlinetask= ，不过仅在 =org-inlinetask= 加载后才会有 =inlinetask=
。这个功能我从来没用使用过。下面是一个例子：

#+BEGIN_EXAMPLE
,*************** TODO some tiny task
This is a paragraph, it lies outside the inlinetask above.
,*************** TODO some small task
                 DEADLINE: <2009-03-30 Mon>
                 :PROPERTIES:
                   :SOMETHING: or other
                 :END:
                 And here is some extra text
,*************** END
#+END_EXAMPLE

我在 Org Manual 中居然没有找到 =inlinetask= 的章节。

** item

=item= 是单个列表项，它在内部可以嵌套 =item= ，结构如下：

#+BEGIN_EXAMPLE
BULLET COUNTER-SET CHECK-BOX TAG CONTENTS
#+END_EXAMPLE

其中：

- =BULLET= 是表头符号，对无序列表可以是 =*=, =-= 或 =+= 。注意顶格的
  =*= 不能作为 =item= 开头，因为它会被识别为 =headline= ；对有序列表需
  要是一个数字或单个 =a-z= 的字符加上 =.= 或 =)= ，比如 =1.= 和 =a)=
- =COUNTER-SET= 指定有序列表的序号值，格式为 =[@COUNTER]=
- =CHECK-BOX= 选择框，可以为 =[ ]=, =[X]= 或 =[-]=
- =TAG= 格式为 =TAG-TEXT ::= ，其中 =TAG-TEXT= 会作为标准集合对象解析
- =CONTENTS= 为零个或多个元素，并在遇到以下情况时结束
  - 下一个 =item=
  - 相比起始行具有更浅或相同缩进的行，这不计算其他非段落元素或 inlinetask 边界内的行
  - 两个连续的换行

下面是文档中给出的例子：

#+BEGIN_EXAMPLE
- item
3. [@3] set to three
+ [-] tag :: item contents
 * item, note whitespace in front
,* not an item, but heading - heading takes precedence
#+END_EXAMPLE

Org Manual 的 [[https://orgmode.org/manual/Plain-Lists.html][Plain Lists]] 一节对列表进行了更为细致的描述。上面提到的 =TAG= 用于生成所谓的 /description list/ ，在 HTML 导出后端中，它会使用不同于 =ol= 和 =ul= 的标签。

** plain list

=plain list= 就是一系列具有相同缩进的连续 =item= 。文档中给出了一个 =plain list= 对应的 AST：

#+BEGIN_EXAMPLE
1. item 1
2. [X] item 2
   - some tag :: item 2.1
#+END_EXAMPLE

#+BEGIN_SRC elisp
  (ordered-plain-list
   (item
     (paragraph))
   (item
    (paragraph)
    (descriptive-plain-list
     (item
       (paragraph)))))
#+END_SRC

Org Manual 在 Plain Lists 一节给出了一些方便的命令，这里简单列出部分：

- =S-UP= =S-DOWN= ，移动到当前列表的下一个/上一个 =item=
- =M-UP= =M-DOWN= ，将当前 =item= 上移/下移一位
- =M-LEFT= =M-RIGHT= ，减少/增加当前 =item= 的缩进，不处理子 =item=
- =C-c C-c= ，切换 =Checkbox= 的状态

** table

Org-mode 支持两种表格，一种来自 Org-mode 自己，另一种来自 Emacs 的 table.el，这两种表格的性状略有不同。Org-mode 表格以 =|= 开头而 tabel.el 以 =+-= 开头。以下代码展示了两者的不同之处：

#+BEGIN_EXAMPLE
|   |   |   |    +---+---+---+
|   |   |   |	 |   |   |   |
		 +---+---+---+
		 |   |   |   |
		 +---+---+---+
#+END_EXAMPLE

表格由一行行的 lesser element =table row= 组成，我们会在后文介绍它。以下是一个表格例子：

#+BEGIN_EXAMPLE
| Name  | Phone | Age |
|-------+-------+-----|
| Peter |  1234 |  24 |
| Anna  |  4321 |  25 |
#+END_EXAMPLE

Org-mode 的表格功能非常强大，支持一定程度的运算功能，可以看作是“穷人的 Excel”。 =table= 的具体用法可以参考 Org Manual 的 [[https://orgmode.org/manual/Tables.html][Tables]] 一章。

** *blocks*

（从 =block= 开始就是 lesser block 了，因此我加粗了标题）

类似 =greater block= ， =lesser block= 也具有相似的结构：

#+BEGIN_EXAMPLE
,#+BEGIN_NAME DATA
CONTENTS
,#+END_NAME
#+END_EXAMPLE

其中， =NAME= 只能为以下小节标题其中之一， =DATA= 同样是一个不含断行的字符串， =CONTENTS= 不含 =#+END_NAME= 。关于各 =lesser block= 的文档如下列表所示：

- [[https://orgmode.org/manual/Comment-Lines.html][Comment Lines]]
- [[https://orgmode.org/manual/Literal-Examples.html][Literal Examples]]
- [[https://orgmode.org/manual/Quoting-HTML-tags.html][Quoting HTML tags]]
- [[https://orgmode.org/manual/Working-with-Source-Code.html][Working with Source Code]]
- [[https://orgmode.org/manual/Paragraphs.html][Paragraphs]]

*** comment block

=comment block= 即注释块。在导出时它们不会被导出。

#+BEGIN_EXAMPLE
,#+BEGIN_COMMENT
I'll not be exported
,#+END_COMMENT
#+END_EXAMPLE

*** example block

=example block= 通常用于显示代码或文字的样例，它会保留原始样式，包括空格和换行，以便准确显示内容。

#+BEGIN_EXAMPLE
,#+BEGIN_EXAMPLE
  Some example from a text file.
,#+END_EXAMPLE
#+END_EXAMPLE

*** export block

我们可以通过 =export block= 指定一段内容针对特定导出后端的内容，这允许在同一文档中为不同的导出格式定制内容。对 HTML 后端来说，我们可以有如下做法：

#+BEGIN_EXAMPLE
,#+BEGIN_EXPORT html
<div><p>123<br>456</p></div>
,#+END_EXPORT
#+END_EXAMPLE

*** src block

=src block= 算是 Org-mode 的重量级特性，在 Org Manual 中专门有一章介绍它的用法。在 =src block= 中， =DATA= 的格式如下：

#+BEGIN_EXAMPLE
LANGUAGE SWITCHES ARGUMENTS
#+END_EXAMPLE

其中 =LANGUAGE= 是源代码块的语言，为一无空格字符串； =SWITCHES= 是由空格分隔的任意数量 =SWITCH= 模式；最后的 =ARGUMENTS= 为无折行字符串。其中 =SWITCH= 的写法可以参考上面给出的 Literal Examples 文档，而 =ARGUMENTS= 参数可以参考 [[https://orgmode.org/manual/Using-Header-Arguments.html][Using Header Arguments]]。

和导出相关的 =ARGUMENTS= 为 =:exports= ，可以指定 =code=, =results=, =both= 和 =none= 四种选项。其中 =code= 为默认选项，即导出代码， =results= 为导出代码的执行结果， =both= 为导出两者， =none= 则不导出代码块。

以下是一个 =src block= 例子：

#+BEGIN_EXAMPLE
,#+begin_src emacs-lisp
"This string
,* has "*" escaped.
Otherwise, '* has "*" escaped.' would be treated as a heading (which
is context-free)."

"#+ lines may or may not need to be escaped:
#+end_src if not escaped, would be this source block.
However,
,#+keyword: does not interfere with code block end and may be left as is.
,#+keyword may be escaped as well, optionally - parser removes all the
commas in ,* and ,#+ lines."
,#+end_src
#+END_EXAMPLE

*** verse block

=verse block= 的功能非常简单，就是保持文本的结构，但它没有 =example block= 那么强，除了换行和缩进外它不会改变其他对象的格式。在以下例子中，若代码块环境为 =example= ，那么 === 内容在 HTML 导出中会直接显示等于号，而不是生成 =<code>= 标签：

#+BEGIN_EXAMPLE
,#+BEGIN_VERSE
 Great clouds overhead
 Tiny black birds rise and fall
 Snow covers Emacs

    ---AlexSchroeder, =hello=
,#+END_VERSE
#+END_EXAMPLE

** clock

=clock= 元素的形状如下：

#+BEGIN_EXAMPLE
clock: INACTIVE-TIMESTAMP
clock: INACTIVE-TIMESTAMP-RANGE DURATION
#+END_EXAMPLE

其中的 =INACTIVE-TIMESTAMP= 和 =INACTIVE-TIMESTAMP-RANGE= 都是 =timestamp= 对象。会在下文介绍； =DURATION= 的格式为 =HH:MM= 。一个简单的例子如下：

#+BEGIN_EXAMPLE
clock: [2024-10-12]
#+END_EXAMPLE

** diary sexp

=diary sexp= 是一个无缩进的如下结构：

#+BEGIN_EXAMPLE
%%SEXP
#+END_EXAMPLE

例子如下：

#+BEGIN_EXAMPLE
%%(org-calendar-holiday)
#+END_EXAMPLE

=diary-sexp= 的具体用法可以参考 [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Sexp-Diary-Entries.html][Sexp Entries and the Fancy Diary Display]]。

** planning

=planning= 元素具有如下结构：

#+BEGIN_EXAMPLE
HEADING
PLANNING
#+END_EXAMPLE

其中 =PALNNING= 一行包含一个或多个 =KEYWORD: TIMESTAMP= 模式， =KEYWORD= 可为 =DEADLINE=, =SCHEDULED= 或 =CLOSED= ， =TIMESTAMP= 为一个 =timestamp= 对象。 =planning= 必须紧随 =heading= ，两者之间不能有空行。

文档给出的例子如下：

#+BEGIN_EXAMPLE
,*** TODO watch "The Matrix"
    SCHEDULED: <1999-03-31 Wed>
,#+END_SRC
#+END_EXAMPLE

** comment
** fixed width
** horizontal rule
** keywords
*** keyword
*** babel call
** latex environment
** node property
** paragraph
** table row

